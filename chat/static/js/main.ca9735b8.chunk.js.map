{"version":3,"sources":["Chat.js","App.js","serviceWorker.js","index.js","github-mark.png"],"names":["cache","CellMeasurerCache","UserAvatar","name","bgColor","style","backgroundColor","color","borderRadius","width","height","textAlign","lineHeight","fontSize","display","flexShrink","margin","substr","toUpperCase","UserMessageContent","msg","img","content","src","padding","maxWidth","map","0","data","self","ref","flexDirection","author","1","Chat","list","useRef","renderer","useCallback","index","key","parent","type","Component","columnIndex","rowIndex","registerChild","useRenderer","useLayoutEffect","el","current","scrollTop","offsetHeight","className","deferredMeasurementCache","overscanColumnCount","rowCount","length","rowHeight","rowRenderer","scrollToIndex","nonsenses","generateMsg","words","size","Array","from","Math","random","systemMsg","App","useState","setList","useEffect","Promise","res","setTimeout","userMsgs","i","undefined","github","systemMsgs","concat","sort","then","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.ca9735b8.chunk.js","sourcesContent":["import React, { createContext, useMemo, useContext, useCallback, useLayoutEffect, useEffect, useRef } from 'react'\nimport 'react-virtualized/styles.css'\nimport {List, AutoSizer, CellMeasurer, CellMeasurerCache} from 'react-virtualized'\n\nconst cache = new CellMeasurerCache()\n\nfunction UserAvatar({ name, bgColor }) {\n  return (\n    <div style={{\n      backgroundColor: bgColor,\n      color: '#fff',\n      borderRadius: '50%',\n      width: 40,\n      height: 40,\n      textAlign: 'center',\n      lineHeight: 0,\n      fontSize: 30,\n      display: 'flex',\n      flexShrink: 0,\n    }}>\n      <div style={{\n        margin: 'auto'\n      }}>\n        {name.substr(0, 1).toUpperCase()}\n      </div>\n    </div>\n  )\n}\n\nfunction UserMessageContent({ msg, img }) {\n  const content = msg || <img src={img.src} style={{ width: img.width, height: img.height }} />\n  return (\n    <div style={{\n      padding: '10px',\n      backgroundColor: '#adcbf1',\n      borderRadius: '10px',\n      margin: '0 10px',\n      maxWidth: '60%',\n    }}>\n      {content}\n    </div>\n  )\n}\n\nfunction UserMessage({ data, self, style, ref }) {\n  return (\n    <div ref={ref} style={style}>\n      <div style={{\n        display: 'flex',\n        padding: '5px 0',\n        flexDirection: self === data.author ? 'row-reverse' : '',\n      }}>\n        <UserAvatar name={data.author} bgColor={self === data.author ? '#3ece53' : '#2cb9d9'}  />\n        <UserMessageContent msg={data.msg} img={data.img} />\n      </div>\n    </div>\n  )\n}\n\nfunction SystemMessage({ data, style, ref }) {\n  return (\n    <div ref={ref} style={style}>\n      <div style={{\n        display: 'flex',\n        padding: '5px 0',\n      }}>\n        <div style={{\n          margin: 'auto',\n          padding: '5px 8px',\n          borderRadius: '10px',\n          backgroundColor: '#e1e1e1'\n        }}>\n          {data.msg}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction useRenderer(list, self, map) {\n  return useCallback(({ index, key, parent, style }) => {\n    const { type, data } = list[index]\n    const Component = map[type]\n\n    return (\n      <CellMeasurer\n        cache={cache}\n        columnIndex={0}\n        key={key}\n        rowIndex={index}\n        parent={parent}>\n        {({registerChild}) => (\n          <Component self={self} data={data} ref={registerChild} style={style} />\n        )}\n      </CellMeasurer>\n    );\n  }, [list, self, map])\n}\n\nconst map = {\n  0: UserMessage,\n  1: SystemMessage,\n}\n\nexport function Chat({ list, self }) {\n  const ref = useRef(null)\n  const renderer = useRenderer(list, self, map)\n  useLayoutEffect(() => {\n    const el = ref.current\n    el.scrollTop = el.offsetHeight\n  }, [])\n  return (\n    <div className=\"chat\" ref={ref}>\n      <AutoSizer>\n        {({ height, width }) => (\n          <List\n            height={height}\n            width={width}\n            deferredMeasurementCache={cache}\n            overscanColumnCount={0}\n            rowCount={list.length}\n            rowHeight={cache.rowHeight}\n            rowRenderer={renderer}\n            scrollToIndex={list.length - 1}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n","import React, { useEffect, useState, useMemo } from 'react';\nimport github from './github-mark.png';\nimport './App.css';\nimport { Chat } from './Chat';\n\nconst nonsenses = [\n  '这是一段废话',\n  '这是另一段废话',\n  '这是第三段废话',\n  '这是第四句废话',\n  '再说一句废话',\n  '加油',\n  '差不多了把',\n  '来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！来一段长长的废话！',\n  '来一段长长的废话 again!来一段长长的废话 again!来一段长长的废话 again!来一段长长的废话 again!来一段长长的废话 again!来一段长长的废话 again!',\n  '好了，就这样把',\n  '拜拜',\n]\n\nfunction generateMsg(words, size) {\n  return Array.from({ length: size }, () => words[((Math.random() * 1000) >> 0) % words.length])\n}\n\nconst systemMsg = [\n  '这是一个很严肃的系统消息',\n  '你已被移除群组',\n  '我是一个系统消息',\n  '系统消息差不多了',\n]\n\nfunction fromRemote() {\n  return new Promise(res => {\n    setTimeout(() => {\n      const userMsgs = generateMsg(nonsenses, 600).map((msg, i) => ({\n        type: 0,\n        data: {\n          msg: i % 50 > 5 ? msg: undefined,\n          img: i % 50 <= 5 ? { src: github, height: 150 } : undefined,\n          author: i < 250 ? 'oops' : 'yoo',\n        },\n      }))\n      const systemMsgs = generateMsg(systemMsg, 50).map(msg => ({ type: 1, data: { msg } }))\n      res(userMsgs.concat(systemMsgs).sort(() => Math.random() - 0.5))\n    }, 100);\n  })\n}\n\nfunction App() {\n  const [list, setList] = useState([])\n  useEffect(() => {\n    fromRemote().then(list => setList(list))\n  }, [])\n  return (\n    <div>\n      {list.length && <Chat self=\"oops\" list={list} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/github-mark.09f5c6ae.png\";"],"sourceRoot":""}